 - *Refactoring for rise analysis*
 - spowtd.rise -> import spowtd.fit_offsets, use get_series_time_offsets
 - spowtd.fit_offsets is the module that does all the linear algebra
 - [X] Refactor out a function that just assembles the system (A and d)
 - [X] Refactor out the solve (assembling A^T A and A^T d,
   linalg.solve)
   - Will want to make it easy to add l1 norm option
 - */Refactoring for rise analysis*
 - [ ] Add test of subcommand that computes and dumps covariance
   matrix for rise analysis
 - [ ] Create a function that assembles the covariance matrix for
   rise analysis, assuming multiplicative errors
   - It has size (# equations, # equations)
   - Start by assembling it in the most naive way, to try to get an
     accurate regression test from the beginning. Then, refactor.
   - We will need some statistics on each series:
     - f_ij
     - |J_i|
     - R_j
     - Terms all look like R_j1 f_i1j1 f_i2j1.  Precompute these?
   - It is symmetric, so it makes sense to populate upper and lower
     triangles at the same time
 - [ ] Create subcommand to compute and dump covariance matrix for
   rise analysis
 - [ ] Add optional weighting of linear system so each event is
   weighted equally
   - Consider adding an additional argument 'weighting_scheme' to
     fit_offsets, default None.
   - Consider allowing an l1-norm solution to the generalized
     least-squares problem?
   - We could do numerical experiments with this, giving the recharge
     depth error \alpha some heavy-tailed distribution.
 - [ ] Enable use of l1 norm instead of l2 norm when fitting rise
   curves
   - Use Cholesky decomposition of covariance matrix to decorrelate.
   - Then use cvxopt:
     https://cvxopt.org/examples/mlbook/l1.html
 - [ ] Add deltaMu (vertical shift) as a peatclsm parameter
 - [ ] Resolve discrepancy in units between spline and Peatclsm
   transmissivity
 - [ ] Update man page
 - [ ] Simpler unit tests to verify functions
 - [ ] Trim test time series to short intervals
 - [ ] Don't create an SQLite db if it doesn't exist for commands for
   which this is inappropriate
 - [ ] Don't create SQLite db if load fails (create in memory, then
   dump)
 - [ ] Use fixtures to speed up tests that require assembly of rise
   and recession curves
